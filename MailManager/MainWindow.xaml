<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        xmlns:local2="clr-namespace:wpfTask1;assembly=wpfTask1"
        xmlns:p="clr-namespace:WpfApp1.Properties"
        mc:Ignorable="d"
        Title="{DynamicResource apptitle}" Height="600" Width="800" MinHeight="400" MinWidth="800" 
        WindowStartupLocation="CenterScreen" Name="mainWindow" ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <Style x:Key="TextBoxStyleWhenEmailNotSelected" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="TextBoxStyleWhenEmailSelected" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16"/>
        </Style>

        <local:SizeConventer x:Key="sizeConverter"/>

        <DataTemplate x:Key="emailNotSelected" DataType="{x:Type local2:EmailMessage}">
            <Grid Height="40">
                <Grid.Resources>
                    <Style BasedOn="{StaticResource TextBoxStyleWhenEmailNotSelected}" TargetType="{x:Type TextBlock}" />
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding Path=Title}" 
                           TextTrimming="CharacterEllipsis"/>
                <TextBlock Margin="1" VerticalAlignment="Center" HorizontalAlignment="Right" Text="{Binding Path=Date}" 
                           Grid.Column="1" TextTrimming="CharacterEllipsis"/>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="emailSelected" DataType="{x:Type local2:EmailMessage}">
            <Grid Height="auto">
                <Grid.Resources>
                    <Style BasedOn="{StaticResource TextBoxStyleWhenEmailSelected}" TargetType="{x:Type TextBlock}"/>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0"
               Grid.ColumnSpan="2" Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
                <TextBlock Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1"
               Grid.ColumnSpan="2" Text="{Binding Date}" TextTrimming="CharacterEllipsis"/>
                <Grid Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"  VerticalAlignment="Center" HorizontalAlignment="Left" Text="{DynamicResource from}" 
                               TextTrimming="CharacterEllipsis" Margin="5"/>
                    <TextBlock Grid.Column="1"  VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding From}" 
                               TextTrimming="CharacterEllipsis" Margin="5"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <DataTemplate x:Key="sentEmailSelected" DataType="{x:Type local2:EmailMessage}">
            <Grid Height="auto">
                <Grid.Resources>
                    <Style BasedOn="{StaticResource TextBoxStyleWhenEmailSelected}" TargetType="{x:Type TextBlock}" />
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0"
               Grid.ColumnSpan="2" Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
                <TextBlock Margin="5" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.Column="0" Grid.Row="1"
               Grid.ColumnSpan="2" Text="{Binding Date}" TextTrimming="CharacterEllipsis"/>
                <Grid Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"  VerticalAlignment="Center" HorizontalAlignment="Left" Text="{DynamicResource to}" 
                               TextTrimming="CharacterEllipsis" Margin="5"/>
                    <TextBlock Grid.Column="1"  VerticalAlignment="Center" HorizontalAlignment="Left" Text="{Binding To}" 
                               TextTrimming="CharacterEllipsis" Margin="5"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <Style TargetType="{x:Type ListViewItem}" x:Key="ContainerStyle">
            <Setter Property="ContentTemplate" Value="{StaticResource emailNotSelected}" />
            <Style.Triggers>
                <Trigger Property="ListViewItem.IsSelected" Value="true">
                    <Setter Property="TextBlock.FontSize" Value="16"/>
                    <Setter Property="ContentControl.ContentTemplate" Value="{StaticResource emailSelected}"/>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="#b5d1ff"/>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#edf3ff"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ListViewItem}" x:Key="SentContainerStyle">
            <Setter Property="ContentTemplate" Value="{StaticResource emailNotSelected}" />
            <Style.Triggers>

                <Trigger Property="ListViewItem.IsSelected" Value="true">
                    <Setter Property="TextBlock.FontSize" Value="16"/>
                    <Setter Property="ContentControl.ContentTemplate" Value="{StaticResource sentEmailSelected}"/>
                </Trigger>

                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="#b5d1ff"/>
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="#edf3ff"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition>
                <ColumnDefinition.Width>
                    <MultiBinding Converter="{StaticResource sizeConverter}" Mode="OneWay">
                        <Binding Path="IsUserLogged"/>
                        <Binding ElementName="mainWindow" Path="ActualWidth"/>
                    </MultiBinding>
                </ColumnDefinition.Width>
            </ColumnDefinition>
            <ColumnDefinition Width="2"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="100"/>
                <RowDefinition Height="2"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Label Grid.Row="1" Background="Gray"></Label>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button Background="White" Name="loginButton" Width="70" Height="70" HorizontalAlignment="Center" Click="loginButton_Click" Margin="5">
                    <StackPanel>
                        <Image Source="Images/login.png"  Width="40" Height="40"/>
                        <TextBlock HorizontalAlignment="Center">
                            <FrameworkElement.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Text" Value="{DynamicResource login}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsUserLogged}" Value="True">
                                            <Setter Property="Text" Value="{DynamicResource logout}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </FrameworkElement.Style>
                        </TextBlock>
                    </StackPanel>
                </Button>
                <Button IsEnabled="{Binding IsUserLogged}" Grid.Column="1" Background="White" Name="newMailButton" Width="70" Height="70" 
                        Margin="5" HorizontalAlignment="Center" Click="newMailButton_Click">
                    <StackPanel>
                        <Image Source="Images/add.png"  Width="40" Height="40"/>
                        <TextBlock HorizontalAlignment="Center" Text="{DynamicResource newEmail}"/>
                    </StackPanel>
                </Button>
                <Border Grid.Column="2" Height="30" BorderBrush="Black" BorderThickness="1" MaxWidth="500" Margin="15,0,15,0">
                    <DockPanel>
                        <Image Source="Images/search.png" Width="30"></Image>
                        <TextBox Name="SearchTextBox" FontSize="14" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                 Background="Transparent" BorderThickness="0" TextChanged="SearchTextBox_TextChanged" IsEnabled="{Binding IsUserLogged}"/>
                    </DockPanel>
                </Border>
                <StackPanel Grid.Column="3"  DockPanel.Dock="Right" VerticalAlignment="Center" Margin="0,0,10,0">
                    <RadioButton Name="englishRadioButton" IsChecked="True" Content="{DynamicResource english}" Margin="0,5,0,5" Checked="RadioButton_Checked"/>
                    <RadioButton Name="polishRadioButton" Content="{DynamicResource polish}" Margin="0,5,0,5" Checked="RadioButton_Checked_1"/>
                </StackPanel>
            </Grid>

            <ScrollViewer Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0"
                    VerticalScrollBarVisibility="Auto">
                <StackPanel ScrollViewer.CanContentScroll="true" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    Margin="20">
                    <TextBlock FontSize="25" TextWrapping="Wrap">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{Binding Path=SelectedMessage.Title}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=sentHeader, Path=IsSelected}" Value="True">
                                        <Setter Property="Text" Value="{Binding Path=SelectedMessageSent.Title}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock FontSize="15" Margin="0,5,0,0">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{Binding Path=SelectedMessage.From, StringFormat={}Email: {0}}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=sentHeader, Path=IsSelected}" Value="True">
                                        <Setter Property="Text" Value="{Binding Path=SelectedMessageSent.To, StringFormat={}Email: {0}}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock FontSize="12" Margin="0,5,0,0">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{Binding Path=SelectedMessage.Date}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=sentHeader, Path=IsSelected}" Value="True">
                                        <Setter Property="Text" Value="{Binding Path=SelectedMessageSent.Date}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock TextWrapping="Wrap" TextAlignment="Justify" FontSize="12" Margin="0,25,0,0">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Text" Value="{Binding Path=SelectedMessage.Body}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=sentHeader, Path=IsSelected}" Value="True">
                                        <Setter Property="Text" Value="{Binding Path=SelectedMessageSent.Body}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </StackPanel>
            </ScrollViewer>
        </Grid>

        <Label Grid.Column="1" Background="Gray"/>
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Image Source="Images/avatar.png"  Width="50" Height="50" Margin="30,25,30,25"/>
                <StackPanel Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="FontSize" Value="15"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Margin" Value="0,2,0,2"/>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Text="{Binding Path=LoggedUser.Name}"/>
                    <TextBlock Text="{Binding Path=LoggedUser.LastName}"/>

                </StackPanel>
            </Grid>
            <TabControl Grid.Row="1" Margin="10" BorderBrush="White" Background="White" FontSize="15">
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border Name="border" BorderThickness="0,0,0,2">
                                        <Grid Name="Panel" Cursor="Hand">
                                            <ContentPresenter x:Name="ContentSite"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Center"
                                                ContentSource="Header"
                                                Margin="10,2"/>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Panel" Property="Background" Value="White" />
                                            <Setter TargetName="border" Property="BorderBrush" Value="#3462ad"/>
                                            <Setter TargetName="ContentSite" Property="TextElement.Foreground"  Value="#3462ad"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <Setter TargetName="Panel" Property="Background" Value="White" />
                                            <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                                            <Setter TargetName="ContentSite" Property="TextElement.Foreground"  Value="Black"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>

                <TabItem Name="receivedHeader" Header="{DynamicResource received}">
                    <ListView Name="emailList" Margin="2,5" HorizontalAlignment="Stretch" 
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0" ItemsSource="{Binding Path=LoggedUser.MessagesReceived}"
                         ItemContainerStyle="{StaticResource ContainerStyle}" SelectedItem="{Binding SelectedMessage}"
                         AlternationCount="2" HorizontalContentAlignment="Stretch" SelectionMode="Single" KeyDown="emailList_KeyDown">
                    </ListView>
                </TabItem>
                <TabItem Name="sentHeader" Header="{DynamicResource sent}" >
                    <ListView Name="sentEmailList" Margin="2,5" HorizontalAlignment="Stretch" 
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" BorderThickness="0" ItemsSource="{Binding Path=LoggedUser.MessagesSent}"
                         ItemContainerStyle="{StaticResource SentContainerStyle}" SelectedItem="{Binding SelectedMessageSent}"
                         AlternationCount="2" HorizontalContentAlignment="Stretch" SelectionMode="Single" KeyDown="emailList_KeyDown">
                    </ListView>
                </TabItem>
            </TabControl>
        </Grid>
    </Grid>
</Window>
