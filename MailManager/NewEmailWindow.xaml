<Window x:Class="WpfApp1.NewEmailWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        WindowStyle="None"
        AllowsTransparency="True"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner"
        ShowInTaskbar="False"
        mc:Ignorable="d"
        Title="NewEmailWindow" Height="450" Width="800">

    <Window.Resources>
        <ControlTemplate x:Key="validationErrorTemplate">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                    <Grid Width="12" Height="12" Margin="5,0,5,0">
                        <Ellipse Width="12" Height="12" Fill="Red" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <TextBlock Foreground="White" FontWeight="Heavy" FontSize="8" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" 
                            ToolTip="{Binding ElementName=ErrorAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">X</TextBlock>
                    </Grid>
                </StackPanel>
                <AdornedElementPlaceholder Name="ErrorAdorner">
                    <Border Name="border" BorderBrush="Transparent"  BorderThickness="2"/>
                </AdornedElementPlaceholder>
            </DockPanel>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding AdornedElement.(TextBox.IsFocused), ElementName=ErrorAdorner}" Value="False">
                    <Setter TargetName="border" Property="BorderBrush" Value="Red"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AdornedElement.(TextBox.IsMouseOver), ElementName=ErrorAdorner}" Value="True">
                    <Setter TargetName="border" Property="BorderBrush" Value="#96bbf7"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding AdornedElement.(TextBox.IsFocused), ElementName=ErrorAdorner}" Value="True">
                    <Setter TargetName="border" Property="BorderBrush" Value="#6ca3fc"/>
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="120"/>
            <RowDefinition Height="36"/>
            <RowDefinition Height="36"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="36"/>
        </Grid.RowDefinitions>
        <Label Grid.Row="0" Margin="20,0,0,0" Foreground="DarkGreen" FontSize="25" Content="{DynamicResource newEmail}" VerticalAlignment="Center"/>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Name="column" Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Content="{DynamicResource to}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <TextBox Name="EmailTextBox" Grid.Column="1" HorizontalAlignment="Stretch" Height="20" VerticalAlignment="Center" Margin="20,0,40,0"
                      Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                <TextBox.Text>
                    <Binding Path="ToTextBoxString" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:EmailValidator/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label Content="{DynamicResource title}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            <TextBox Name="TitleTextBox" Grid.Column="1" HorizontalAlignment="Stretch" Height="20" VerticalAlignment="Center" Margin="20,0,40,0"
                     Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                <TextBox.Text>
                    <Binding Path="TitleTextBoxString" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:TitleValidator/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="36"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label Content="{DynamicResource message}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
            </Grid>
            <TextBox AcceptsReturn="True" TextWrapping="Wrap" Name="MessageTextBox" Grid.Column="1" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" 
                     Margin="20,8,40,8" Validation.ErrorTemplate="{StaticResource validationErrorTemplate}">
                <TextBox.Text>
                    <Binding Path="MessageTextBoxString" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:MessageValidator/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <DockPanel Grid.Row="4">
            <Button Width="100" Height="20" VerticalAlignment="Center" DockPanel.Dock="Right" Margin="10,0,10,0"
                    Content="{DynamicResource send}" Foreground="DarkGreen" Click="Button_Click_1">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="IsEnabled" Value="false" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=MessageTextBox, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=TitleTextBox, Path=(Validation.HasError)}" Value="false" />
                                    <Condition Binding="{Binding ElementName=EmailTextBox, Path=(Validation.HasError)}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="IsEnabled" Value="true" />
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding Path=ToTextBoxString}" Value="">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=TitleTextBoxString}" Value="">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=MessageTextBoxString}" Value="">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Width="100" Height="20" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="10,0,10,0" 
                    Content="{DynamicResource cancel}" Foreground="DarkGreen" Click="Button_Click"/>
        </DockPanel>
    </Grid>
</Window>
